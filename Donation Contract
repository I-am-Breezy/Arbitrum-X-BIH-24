// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

contract DonationSmartContract {
   address immutable public owner;

   mapping(address => uint256) public _balances;
   constructor () {
    owner = msg.sender;

    
   }
   
   function deposit(uint256 amount) public payable {
        if(amount == 0) {
         revert ("Deposit cannot be zero!");
        }
        _balances[msg.sender] += amount;
       
   }
   

   function withdraw(uint256 amount) public {
        if (amount < 0 ) {
            revert (" You cannot withdraw zero amount");
         }

     _balances[msg.sender] -= amount;
      payable(msg.sender).transfer(amount);
   }
   
   function getBalance(address account) public view returns (uint256) {
    return _balances[account];


   }
}
